
1.Explique o objetivo e os parâmetros de cada uma das quatro funções acima

    a)getcontext(&a) : salva o contexto atual do usuário (&a), guardando registradores e pilhas.
    b)setcontext(&a) : restaura o contexto do usuário (&a) 
                            e redireciona para o momento do contexto salvado em getcontext().
    c)swapcontext(&a,&b) : salva o contexto atual do usuário (&a) - getcontext(&a) 
                            e restaura o contexto do usuário (&b) redirecionando para o momento desse contexto - setcontext(&b).
    d)makecontext(&a, …) : altera o contexto do usuário (&a), passando uma função para continuar a execução do programa e também passando
                            quantos argumentos inteiros a função recebe ,juntamentre com o(s) valor(es) enviados para essa função.

2.Explique o significado dos campos da estrutura ucontext_t que foram utilizados no código.
    uc_stack = armazena informações da pilha (tamanho,flags,ponteiro)
    uc_link = aponta para o próximo contexto de usuário a ser executado quando finalizada a função passada em makecontext()

3.Explique cada linha do código de contexts.c que chame uma dessas funções ou que manipule estruturas do tipo ucontext_t.

    main:
        66 - salva o contexto do usuário na variável ContextPing
        82 - chama a função BodyPing , passando o contexto ContextPing e o texto "Ping"
        84 - salva o contexto do usuário na variável ContextPong
        100 - chama a função BodyPong , passando o contexto ContextPong e o texto "Pong"
        102 - salva o contexto do usuário da variável ContextMain e redireciona para o contexto de usuário ContextPing
        103 - salva o contexto do usuário da variável ContextMain e redireciona para o contexto de usuário ContextPong
    BodyPing:
        33 - salva o contexto do usuário da variável ContextPing e redireciona para o contexto de usuário ContextPong
        37 - salva o contexto do usuário da variável ContextPing e redireciona para o contexto de usuário ContextMain
    BodyPong:
        51 - salva o contexto do usuário da variável ContextPong e redireciona para o contexto de usuário ContextPing
        55 - salva o contexto do usuário da variável ContextPong e redireciona para o contexto de usuário ContextMain

4.Desenhe o diagrama de tempo dessa execução.

ContextMain (start) -> ContextPing (0) -> ContextPong (0)   -> 
ContextPing (1)     -> ContextPong (1) -> ContextPing (2)   -> 
ContextPong (2)     -> ContextPing (3) -> ContextPong (3)   ->
ContextPing (end)   -> ContextMain     -> ContextPong (end) -> 
ContextMain(end)